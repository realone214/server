{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2022c\\\\Desktop\\\\realtime-chat-app\\\\client\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  socket,\n  room,\n  userName\n}) => {\n  _s();\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  useEffect(() => {\n    console.log('useEffect is running with socket, room, userName:', socket, room, userName);\n    socket.emit('join_room', {\n      room,\n      userName\n    });\n    socket.on('receive_message', data => {\n      setMessageList(list => [...list, data]);\n    });\n    socket.on('active_users', users => {\n      setActiveUsers(users);\n    });\n    socket.on('all_messages', messages => {\n      setMessageList(messages);\n    });\n    return () => {\n      socket.emit('leave_room', {\n        room,\n        userName\n      });\n    };\n  }, [socket, room, userName]);\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: userName,\n        message: currentMessage,\n        time: new Date().toLocaleString()\n      };\n      await socket.emit('send_message', messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-name\",\n        children: [\"Hi \", userName, \", You are in room: \", room]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-users\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"active-users-title\",\n          children: \"Active Users:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"active-users-list\",\n          children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"button\", {\n            children: user\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 38\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messageList.map((messageContent, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"author\",\n          children: messageContent.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-text\",\n          children: messageContent.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"time\",\n          children: messageContent.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentMessage,\n          onChange: e => setCurrentMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chat, \"dU6CumaJf/U0C/u/qZjsmGcbLq0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","socket","room","userName","_s","currentMessage","setCurrentMessage","messageList","setMessageList","activeUsers","setActiveUsers","console","log","emit","on","data","list","users","messages","sendMessage","messageData","author","message","time","Date","toLocaleString","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","user","messageContent","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/2022c/Desktop/realtime-chat-app/client/src/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst Chat = ({ socket, room, userName }) => {\r\n  const [currentMessage, setCurrentMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    console.log('useEffect is running with socket, room, userName:', socket, room, userName);\r\n\r\n    socket.emit('join_room', { room, userName });\r\n\r\n    socket.on('receive_message', (data) => {\r\n      setMessageList((list) => [...list, data]);\r\n    });\r\n\r\n    socket.on('active_users', (users) => {\r\n      setActiveUsers(users);\r\n    });\r\n\r\n    socket.on('all_messages', (messages) => {\r\n      setMessageList(messages);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('leave_room', { room, userName });\r\n    };\r\n  }, [socket, room, userName]);\r\n\r\n  const sendMessage = async () => {\r\n    if (currentMessage !== \"\") {\r\n      const messageData = {\r\n        room: room,\r\n        author: userName,\r\n        message: currentMessage,\r\n        time: new Date().toLocaleString()\r\n      };\r\n\r\n      await socket.emit('send_message', messageData);\r\n      setMessageList((list) => [...list, messageData]);\r\n      setCurrentMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p className='room-name'>Hi {userName}, You are in room: {room}</p>\r\n        <div className=\"active-users\"> \r\n          <p className='active-users-title'>Active Users:</p>\r\n          <div className='active-users-list'>\r\n            {activeUsers.map(user => <button key={user}>{user}</button>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='chat-container'>\r\n        {messageList.map((messageContent, index) => \r\n          <div className='message' key={index}>\r\n            <p className='author'>{messageContent.author}</p>\r\n            <p className='message-text'>{messageContent.message}</p>\r\n            <p className='time'>{messageContent.time}</p>\r\n          </div>  \r\n        )}\r\n       \r\n        <div className='message-input'>\r\n          <input type=\"text\" value={currentMessage} onChange={(e) => setCurrentMessage(e.target.value)} />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      </div>     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}